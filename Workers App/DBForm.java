
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ErenS
 */
public class DBForm extends javax.swing.JFrame {
    DefaultTableModel model;
    Database database = new Database();
    /**
     * Creates new form DBForm
     */
    public DBForm() {
        initComponents();
        model = (DefaultTableModel) workerTable.getModel(); 
        database.listQuery();
        updateTable();
        nameTextField.setText("");
        surnameTextField.setText("");
        departmentTextField.setText("");
        salaryTextField.setText("");
    }
    
    public void updateTable(){
        
        for(Worker worker : database.getWorkers()){
            
            Object[] eklenecek = {worker.getName(), worker.getSurname(), worker.getDepartment(), worker.getId()};
            
            model.addRow(eklenecek);
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        salaryTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        departmentTextField = new javax.swing.JTextField();
        surnameTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workerTable = new javax.swing.JTable();
        errorLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WorkerDatabase");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jLabel1.setText("Search:");

        searchTextField.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jLabel2.setText("Name:");

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jLabel3.setText("Department:");

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jLabel4.setText("Surname:");

        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jLabel5.setText("Salary:");

        salaryTextField.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N

        nameTextField.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N

        departmentTextField.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N

        surnameTextField.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N

        jButton1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jButton1.setText("Update Worker");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jButton2.setText("Delete Worker");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jButton3.setText("Add Worker");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        workerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Surname", "Department", "Salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(workerTable);

        errorLabel.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(searchTextField))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel5))
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(departmentTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                            .addComponent(surnameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(salaryTextField))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jSeparator1)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(errorLabel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton1))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(errorLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        if(nameTextField.getText().equals("")){
            errorLabel.setText("İsim kısmı boş bırakılamaz.");
        }
        else if(surnameTextField.getText().equals("")){
            errorLabel.setText("Soyisim kısmı boş bırakılamaz.");
        }
        else if(departmentTextField.getText().equals("")){
            errorLabel.setText("Departman kısmı boş bırakılamaz.");
        }
        else if(Integer.valueOf(salaryTextField.getText()) < 0 || salaryTextField.getText().equals("")){
            errorLabel.setText("Maaş kısmı boş bırakılamaz ve maaş 0 TL'den düşük olamaz.");
        }
        else{
            Object[] eklenecek = {nameTextField.getText(), surnameTextField.getText(), departmentTextField.getText(),
            Integer.valueOf(salaryTextField.getText())};
        
            model.addRow(eklenecek);
            
            
            String query = "INSERT INTO calisanlar ([ad], [soyad], [departman], [maas]) VALUES "
                    + "('" + nameTextField.getText() + "', '"
                    + surnameTextField.getText() + "', '"
                    + departmentTextField.getText() + "', '"
                    + Integer.valueOf(salaryTextField.getText()) + "')";
            
            int value = database.Query(query);
            
            errorLabel.setText("Çalışan eklendi " + value + " satır güncellendi.");
            
        }
   
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        int selectedRow = workerTable.getSelectedRow();
        
        if (selectedRow == -1) {
           if (model.getRowCount() == 0 ) {
               errorLabel.setText("Çalışan tablosu şu anda boş.");
           }
           else {
               errorLabel.setText("Silinecek bir çalışan seçmediniz.");
           }
        }
        else{
            String isim = (String)model.getValueAt(selectedRow, 0);
        
            model.removeRow(selectedRow);
        
            String query = "DELETE FROM calisanlar WHERE ad = '" + isim + "'";
            int value = database.Query(query);
            errorLabel.setText("Çalışan silindi ve " + value + " satır güncellendi.");
        }
        
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        int selectedRow = workerTable.getSelectedRow();
        
        if (selectedRow == -1) {
           if (model.getRowCount() == 0 ) {
               errorLabel.setText("Çalışan tablosu şu anda boş.");
           }
           else {
               errorLabel.setText("Güncellenecek bir çalışan seçmediniz.");
           }
        }
        else{
            String isim = (String)model.getValueAt(selectedRow, 0);
        
            String query = "UPDATE calisanlar SET ad = '"
                    + nameTextField.getText() + "', soyad = '"
                    + surnameTextField.getText() + "', departman = '"
                    + departmentTextField.getText() + "', maas = '"
                    + Integer.valueOf(salaryTextField.getText()) + "' WHERE ad = '"
                    + isim + "'";
            
            int value = database.Query(query);
            errorLabel.setText("Çalışan güncellendi ve " + value + " satır güncellendi.");
            
            model.setValueAt(nameTextField.getText(), selectedRow, 0);
            model.setValueAt(surnameTextField.getText(), selectedRow, 1);
            model.setValueAt(departmentTextField.getText(), selectedRow, 2);
            model.setValueAt(salaryTextField.getText(), selectedRow, 3);
        }
    }                                        

    private void workerTableMouseClicked(java.awt.event.MouseEvent evt) {                                         
        
        int selectedRow = workerTable.getSelectedRow();
        
        if(selectedRow != -1){
            
            nameTextField.setText(model.getValueAt(selectedRow, 0).toString());
            surnameTextField.setText(model.getValueAt(selectedRow, 1).toString());
            departmentTextField.setText(model.getValueAt(selectedRow, 2).toString());
            salaryTextField.setText(model.getValueAt(selectedRow, 3).toString());
            
        }
        
    }                                        

    public void dynamicSearch(String search){
        
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        workerTable.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(search));
        
    }
    
    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {                                            
        
        String search = searchTextField.getText();
        
        dynamicSearch(search);
        
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBForm().setVisible(true);
            }
        });
        
        
        
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField departmentTextField;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField salaryTextField;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField surnameTextField;
    private javax.swing.JTable workerTable;
    // End of variables declaration                   
}
